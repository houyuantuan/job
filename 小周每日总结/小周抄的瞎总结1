### 常见错误
405一般是请求方法错误
500错误提示第1行第1列一般是解释请求体数据格式错误
### Http请求
根据客户端发的请求，得到想要的数据

1.查询字符串参数
   无论客户端以什么方式请求，如post，获取，提取字符串参数都是用request.GET ---此处request代表封装后的请求对象参数
2.请求体数据

①表单类型

  body = request.POST --- QueryDict对象
  body.get（' xx '）取值
②非表单类型	     
  90％是json类型
  导入json
  json_str = request.body --byte类型数据
  json.loads（json_str）-转换成字典
  再用.get取值

请求头

请求.META

路由转换器-请求路径参数用到

注意

1通过正则限制参数类型
2作用提高代码重新性
3默认位置从django.urls导入register_converter＃默认路由转换器地址
4前内部关键字参数必须和路由中关键字一样



步骤
1.在项目任何可以导入模块的路径新建一个python文件如converters.py，然后复制副本路由器的样本修改达到自己想要的效果
MobileConverter类：
  regex = ' 1 [3-9] \ d {9} '
  def to_python（自我，价值）：
      返回 int（值）
  def to_url（self，value）：
      返回 str（值）

2.根目录urls.py注册总路由  
 从django.urls导入register_converter
 从自己新建py文件导入自己定义路由转换器的类：如下
 从.converters导入MobileConverter



3.根据自己的定义的正则注册子路由
 Http响应
 类HTTPResponse（）：响应多种数据类型
  python
  def  __init__（self，content = b ' '，* args，** kwargs）：
  
  HttpResponse（content = ' '）
 JSON响应
  python
  def  __init__（self，data，encoder = DjangoJSONEncoder，safe = True，
                   json_dumps_params = None，** kwargs）：
      
  默认预设data参数格式是字典，safe = False则可以预设列表
  准备字典数据= {
  }
 
  返回return JsonResponse（data）转换成json数据并且重启



return redirect（'重定向地址'）

注意：重定向的路径前没加/（＃根路径）HTTP协议替换当成分割的请求路径和重定向路径如login /重定向return redirect（'index /'）---->替换到login / index /所以要写成redirect（'/ index /'）




